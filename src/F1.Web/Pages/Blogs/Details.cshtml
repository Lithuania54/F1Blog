@page "{id:int}"
@model F1.Web.Pages.Blogs.DetailsModel
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
    ViewData["Title"] = Model.Post?.Title ?? "Post";
}

<div class="container py-5">
  <article class="card bg-transparent border border-secondary rounded mx-auto p-4" style="max-width:900px;">
    <h1 class="display-6">@Model.Post?.Title</h1>

    <div class="text-muted mb-3">
      <span class="me-1">Posted:</span> @Model.Post?.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm")
      @if (!string.IsNullOrEmpty(Model.Post?.AuthorName)) { <span> â€¢ @Model.Post.AuthorName</span> }
    </div>

    @if (!string.IsNullOrEmpty(Model.Post?.ImageUrl))
    {
        <img src="@Model.Post.ImageUrl" alt="cover" class="img-fluid rounded mb-3" style="width:100%;object-fit:cover" />
    }

    @if (!string.IsNullOrEmpty(Model.Post?.Hashtags))
    {
        var tags = Model.Post.Hashtags.Split(',', StringSplitOptions.RemoveEmptyEntries | StringSplitOptions.TrimEntries);
        <div class="mb-3">
            @foreach (var t in tags) { <span class="badge bg-secondary me-1">#@t</span> }
        </div>
    }

    <div class="prose text-light">
      @* Simple rendering of plain/markdown text. If you want Markdown rendering, use Markdig to convert to HTML safely. *@
      @foreach (var line in (Model.Post?.Content ?? "").Split(new[] { "\n\n" }, StringSplitOptions.None))
      {
          <p>@line</p>
      }
    </div>
  </article>
</div>
