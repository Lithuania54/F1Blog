@page
@model F1.Web.Pages.Standings.IndexModel
@{
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<div class="container py-5 mt-5">
  <div class="alert alert-info">Data is example/randomized for 2025 â€” update manually with accurate results.</div>

  <h2 class="h4">Driver Standings (2025)</h2>
  <div class="table-responsive mb-4">
    <table class="table table-dark table-striped table-borderless">
      <thead>
        <tr>
          <th scope="col">Pos</th>
          <th scope="col">Driver</th>
          <th scope="col">Team</th>
          <th scope="col" class="sortable">Points</th>
          <th scope="col">Wins</th>
          <th scope="col">Podiums</th>
        </tr>
      </thead>
      <tbody id="driversBody">
        @foreach(var d in Model.DriverStandings)
        {
          <tr class="@(d.Position==1?"leader-row":"")">
            <td>@d.Position</td>
            <td>@d.Name</td>
            <td>@d.Team</td>
            <td>@d.Points</td>
            <td>@d.Wins</td>
            <td>@d.Podiums</td>
          </tr>
        }
      </tbody>
    </table>
  </div>

  <h2 class="h4 mt-5">Team Standings (2025)</h2>
  <div class="table-responsive">
    <table class="table table-dark table-striped">
      <thead>
        <tr>
          <th>Pos</th><th>Team</th><th class="sortable">Points</th><th>Wins</th>
        </tr>
      </thead>
      <tbody id="teamsBody">
        @foreach(var t in Model.TeamStandings)
        {
          <tr class="@(t.Position==1?"leader-row":"")">
            <td>@t.Position</td>
            <td>@t.Name</td>
            <td>@t.Points</td>
            <td>@t.Wins</td>
          </tr>
        }
      </tbody>
    </table>
  </div>
</div>

@section Scripts{
  <script defer>
    // Simple client-side sort for columns with class 'sortable'
    document.addEventListener('click', function(e){
      const el = e.target;
      if(el.classList && el.classList.contains('sortable')){
        const th = el; const table = th.closest('table');
        const colIndex = Array.from(th.parentElement.children).indexOf(th);
        const tbody = table.querySelector('tbody');
        const rows = Array.from(tbody.querySelectorAll('tr'));
        rows.sort((a,b)=> +b.children[colIndex].innerText - +a.children[colIndex].innerText);
        rows.forEach(r=>tbody.appendChild(r));
      }
    });
  </script>
}
